{"ast":null,"code":"var _jsxFileName = \"/home/asmaa/web development/DevConnector/client/src/components/context/auth/AuthState.js\";\nimport AuthContext from './AuthContext';\nimport axios from 'axios';\nimport React, { useReducer } from 'react';\nimport { setAlert } from '../alert/AlertState';\nimport setAuthToken from '../../../utils/setAuthtoken';\nimport AuthReducer from './AuthReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    errors: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //loaded users\n\n  const loadUser = async () => {\n    //token in global\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; //register user\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.errors[0]\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      token: state.token,\n      loading: state.loading,\n      isAuthenticated: state.isAuthenticated,\n      errors: state.errors,\n      register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/home/asmaa/web development/DevConnector/client/src/components/context/auth/AuthState.js"],"names":["AuthContext","axios","React","useReducer","setAlert","setAuthToken","AuthReducer","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","errors","state","dispatch","loadUser","res","get","type","USER_LOADED","payload","data","err","AUTH_ERROR","register","formData","config","headers","post","error","response","children"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,UAJF,QAKO,UALP;;AAMA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,IAAI,EAAE,IAJa;AAKnBC,IAAAA,MAAM,EAAE;AALW,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,UAAU,CAACG,WAAD,EAAcO,YAAd,CAApC,CATyB,CAYzB;;AACA,QAAMU,QAAQ,GAAG,YAAY;AAC3B;AAEA,QAAIR,YAAY,CAACD,KAAjB,EAAwB;AACtBT,MAAAA,YAAY,CAACU,YAAY,CAACD,KAAd,CAAZ;AACD;;AACD,QAAI;AACF,YAAMU,GAAG,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAU,WAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEC,WAAR;AAAqBC,QAAAA,OAAO,EAAEJ,GAAG,CAACK;AAAlC,OAAD,CAAR;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZR,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEK;AAAR,OAAD,CAAR;AACD;AACF,GAZD,CAbyB,CA0BzB;;;AACA,QAAMC,QAAQ,GAAG,MAAMC,QAAN,IAAkB;AACjC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAI;AACF,YAAMX,GAAG,GAAG,MAAMvB,KAAK,CAACmC,IAAN,CAAW,YAAX,EAAyBH,QAAzB,EAAmCC,MAAnC,CAAlB;AACAZ,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEnB,gBAAR;AAA0BqB,QAAAA,OAAO,EAAEJ,GAAG,CAACK;AAAvC,OAAD,CAAR;AACAN,MAAAA,QAAQ;AACT,KAJD,CAIE,OAAOc,KAAP,EAAc;AACZf,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAElB,aAAR;AAAuBoB,QAAAA,OAAO,EAACS,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBT,MAApB,CAA2B,CAA3B;AAA/B,OAAD,CAAR;AACH;AACF,GAbD;;AAeA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,IAAI,EAAEE,KAAK,CAACF,IADP;AAELL,MAAAA,KAAK,EAAEO,KAAK,CAACP,KAFR;AAGLI,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILD,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAJlB;AAKLG,MAAAA,MAAM,EAAEC,KAAK,CAACD,MALT;AAKgBY,MAAAA;AALhB,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGpB,KAAK,CAAC2B,QATT,CADF;AAaD,CAvDD;;AAyDA,eAAe5B,SAAf","sourcesContent":["import AuthContext from './AuthContext';\nimport axios from 'axios';\nimport React, { useReducer } from 'react';\nimport {setAlert} from '../alert/AlertState'\nimport setAuthToken from '../../../utils/setAuthtoken';\n\nimport AuthReducer from './AuthReducer';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL\n} from '../types';\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    errors: null\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n\n  //loaded users\n  const loadUser = async () => {\n    //token in global\n\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({ type: USER_LOADED, payload: res.data });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n  //register user\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n      loadUser();\n    } catch (error) {\n        dispatch({ type: REGISTER_FAIL, payload:error.response.data.errors[0]});\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        token: state.token,\n        loading: state.loading,\n        isAuthenticated: state.isAuthenticated,\n        errors: state.errors,register\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}