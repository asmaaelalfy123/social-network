{"ast":null,"code":"// import React, { useContext } from 'react';\n// import { Route, Redirect } from 'react-router-dom';\n// import AuthContext from '../context/auth/AuthContext';\n// const PrivateRoute = ({ component: Component, ...rest }) => {\n//   const { isAuthenticated, loading } = useContext(AuthContext);\n//   return (\n//     <Route\n//       {...rest}\n//       render={props =>\n//         !isAuthenticated && !loading ? (\n//           <Redirect to='/login' />\n//         ) : (\n//           <Component {...props} />\n//         )\n//       }\n//     />\n//   );\n// };\n// import React, { useContext } from 'react'\n// import { Route, Redirect } from 'react-router-dom'\n// import PropTypes from 'prop-types'\n// import AuthContext from '../context/auth/AuthContext';\n// import {Spinner} from '../layout/Spinner'\n// const PrivateRoute = ({ component: Component, ...otherProps }) => {\n//     const { isAuthenticated, loading } = useContext(AuthContext)\n//     return (\n//         <Route\n//             {...otherProps}\n//             render={props => (\n//                 !loading\n//                     ?\n//                     (\n//                         isAuthenticated\n//                             ?\n//                             <Component {...props} />\n//                             :\n//                             <Redirect to={otherProps.redirectTo ? otherProps.redirectTo : '/login'} />\n//                     )\n//                     :\n//                     <Spinner />\n//             )}\n//         />\n//     )\n// }\n// PrivateRoute.propTypes = {\n//     component: PropTypes.func.isRequired\n// }\n// export default PrivateRoute\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/asmaa/web development/DevConnector/client/src/components/routing/PrivateRoute.js"],"names":["PrivateRoute"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA,eAAeA,YAAf","sourcesContent":["// import React, { useContext } from 'react';\n// import { Route, Redirect } from 'react-router-dom';\n// import AuthContext from '../context/auth/AuthContext';\n\n// const PrivateRoute = ({ component: Component, ...rest }) => {\n//   const { isAuthenticated, loading } = useContext(AuthContext);\n\n//   return (\n//     <Route\n//       {...rest}\n//       render={props =>\n//         !isAuthenticated && !loading ? (\n//           <Redirect to='/login' />\n//         ) : (\n//           <Component {...props} />\n//         )\n//       }\n//     />\n//   );\n// };\n\n// import React, { useContext } from 'react'\n// import { Route, Redirect } from 'react-router-dom'\n// import PropTypes from 'prop-types'\n// import AuthContext from '../context/auth/AuthContext';\n// import {Spinner} from '../layout/Spinner'\n\n// const PrivateRoute = ({ component: Component, ...otherProps }) => {\n\n//     const { isAuthenticated, loading } = useContext(AuthContext)\n\n//     return (\n//         <Route\n//             {...otherProps}\n//             render={props => (\n//                 !loading\n//                     ?\n//                     (\n//                         isAuthenticated\n//                             ?\n//                             <Component {...props} />\n//                             :\n//                             <Redirect to={otherProps.redirectTo ? otherProps.redirectTo : '/login'} />\n//                     )\n//                     :\n//                     <Spinner />\n//             )}\n//         />\n//     )\n\n// }\n\n// PrivateRoute.propTypes = {\n//     component: PropTypes.func.isRequired\n// }\n\n// export default PrivateRoute\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}