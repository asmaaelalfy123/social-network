{"ast":null,"code":"var _jsxFileName = \"/home/asmaa/web development/DevConnector/client/src/components/context/profile/ProfileState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ProfileContext from './ProfileContext';\nimport ProfileReducer from './ProfileReducer';\nimport { GET_PROFILE, PROFILE_ERRORS } from '../types';\n\nconst ProfileState = props => {\n  const initialState = {\n    profile: null,\n    profiles: [],\n    error: {},\n    repos: [],\n    loading: true\n  };\n  const [state, dispatch] = useReducer(ProfileReducer, initialState); //get current profile\n\n  const getCurrentPorfile = async () => {\n    try {\n      const res = await axios.get('/api/profile/me');\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERRORS,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ProfileContext.Provider, {\n    value: {\n      profile: state.profile,\n      profiles: state.profiles,\n      error: state.error,\n      loading: state.loading,\n      repos: state.repos,\n      getCurrentPorfile\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ProfileState;","map":{"version":3,"sources":["/home/asmaa/web development/DevConnector/client/src/components/context/profile/ProfileState.js"],"names":["React","useReducer","axios","ProfileContext","ProfileReducer","GET_PROFILE","PROFILE_ERRORS","ProfileState","props","initialState","profile","profiles","error","repos","loading","state","dispatch","getCurrentPorfile","res","get","type","payload","data","err","msg","response","statusText","status","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,UAA5C;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,IADU;AAEnBC,IAAAA,QAAQ,EAAE,EAFS;AAGnBC,IAAAA,KAAK,EAAE,EAHY;AAInBC,IAAAA,KAAK,EAAE,EAJY;AAKnBC,IAAAA,OAAO,EAAE;AALU,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACG,cAAD,EAAiBK,YAAjB,CAApC,CAT4B,CAW5B;;AACA,QAAMQ,iBAAiB,GAAG,YAAY;AACpC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,iBAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEf,WAAR;AAAqBgB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAAlC,OAAD,CAAR;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEd,cADC;AAEPe,QAAAA,OAAO,EAAE;AAAEG,UAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,UAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,OAAD,CAAR;AAID;AACF,GAVD;;AAYA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLjB,MAAAA,OAAO,EAAEK,KAAK,CAACL,OADV;AAELC,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAFX;AAGLC,MAAAA,KAAK,EAAEG,KAAK,CAACH,KAHR;AAILE,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJV;AAKLD,MAAAA,KAAK,EAAEE,KAAK,CAACF,KALR;AAMLI,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGT,KAAK,CAACoB,QAVT,CADF;AAcD,CAtCD;;AAwCA,eAAerB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ProfileContext from './ProfileContext';\nimport ProfileReducer from './ProfileReducer';\nimport { GET_PROFILE, PROFILE_ERRORS } from '../types';\n\nconst ProfileState = props => {\n  const initialState = {\n    profile: null,\n    profiles: [],\n    error: {},\n    repos: [],\n    loading: true\n  };\n\n  const [state, dispatch] = useReducer(ProfileReducer, initialState);\n\n  //get current profile\n  const getCurrentPorfile = async () => {\n    try {\n      const res = await axios.get('/api/profile/me');\n      dispatch({ type: GET_PROFILE, payload: res.data });\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERRORS,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n  return (\n    <ProfileContext.Provider\n      value={{\n        profile: state.profile,\n        profiles: state.profiles,\n        error: state.error,\n        loading: state.loading,\n        repos: state.repos,\n        getCurrentPorfile\n      }}\n    >\n      {props.children}\n    </ProfileContext.Provider>\n  );\n};\n\nexport default ProfileState;\n"]},"metadata":{},"sourceType":"module"}