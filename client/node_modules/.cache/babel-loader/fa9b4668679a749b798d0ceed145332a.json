{"ast":null,"code":"var _jsxFileName = \"/home/asmaa/web development/DevConnector/client/src/components/context/profile/ProfileState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ProfileContext from './ProfileContext';\nimport ProfileReducer from './ProfileReducer';\nimport { GET_PROFILE, PROFILE_ERRORS, CLEAR_PROFILE } from '../types';\nimport { setAlert } from '../alert/AlertReducer';\n\nconst ProfileState = props => {\n  const initialState = {\n    profile: null,\n    profiles: [],\n    error: {},\n    repos: [],\n    loading: true\n  };\n  const [state, dispatch] = useReducer(ProfileReducer, initialState); //get current profile\n\n  const getCurrentPorfile = async profile => {\n    try {\n      const res = await axios.get('/api/profile/me');\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERRORS,\n        payload: err.response.data.msg\n      });\n    }\n  }; //create Profile\n\n\n  const createProfile = async (formdata, history, edit = false) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/profile', formdata, config);\n      dispatch({\n        type: CREATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\"));\n\n      if (!edit) {\n        history.push('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(error.msg));\n      }\n\n      dispatch({\n        type: PROFILE_ERRORS,\n        payload: err.response.data.msg\n      });\n    }\n  }; //clear profile\n\n\n  const clearProfile = () => {\n    dispatch({\n      type: CLEAR_PROFILE\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ProfileContext.Provider, {\n    value: {\n      profile: state.profile,\n      profiles: state.profiles,\n      error: state.error,\n      loading: state.loading,\n      repos: state.repos,\n      createProfile,\n      getCurrentPorfile,\n      clearProfile\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ProfileState;","map":{"version":3,"sources":["/home/asmaa/web development/DevConnector/client/src/components/context/profile/ProfileState.js"],"names":["React","useReducer","axios","ProfileContext","ProfileReducer","GET_PROFILE","PROFILE_ERRORS","CLEAR_PROFILE","setAlert","ProfileState","props","initialState","profile","profiles","error","repos","loading","state","dispatch","getCurrentPorfile","res","get","type","payload","data","err","response","msg","createProfile","formdata","history","edit","config","headers","post","CREATE_PROFILE","push","errors","forEach","clearProfile","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ProfileContext from './ProfileContext';\nimport ProfileReducer from './ProfileReducer';\nimport { GET_PROFILE, PROFILE_ERRORS ,CLEAR_PROFILE} from '../types';\nimport {setAlert} from '../alert/AlertReducer'\n\nconst ProfileState = props => {\n  const initialState = {\n    profile: null,\n    profiles: [],\n    error: {},\n    repos: [],\n    loading: true\n  };\n\n  const [state, dispatch] = useReducer(ProfileReducer, initialState);\n\n  //get current profile\n  const getCurrentPorfile = async profile => {\n    try {\n      const res = await axios.get('/api/profile/me');\n      dispatch({ type: GET_PROFILE, payload: res.data });\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERRORS,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  //create Profile\n\n  const createProfile= async (formdata,history,edit=false) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/profile', formdata, config);\n      dispatch({ type:CREATE_PROFILE, payload: res.data });\n      dispatch(setAlert(edit?\"Profile Updated\":\"Profile Created\"))\n      if(!edit){\n        history.push('/dashboard')\n      }\n    }\n  \n    catch (err) {\n\n      const errors=err.response.data.errors\n      if(errors){\n        errors.forEach(error =>dispatch (  error.msg));\n      }\n      dispatch({ type: PROFILE_ERRORS, payload: err.response.data.msg });\n    }\n  };\n\n\n  //clear profile\n  \n  const clearProfile = () => {\n    dispatch({ type: CLEAR_PROFILE });\n  };\n\n\n  return (\n    <ProfileContext.Provider\n      value={{\n        profile: state.profile,\n        profiles: state.profiles,\n        error: state.error,\n        loading: state.loading,\n        repos: state.repos,createProfile,\n        getCurrentPorfile,clearProfile\n      }}\n    >\n      {props.children}\n    </ProfileContext.Provider>\n  );\n};\n\nexport default ProfileState;\n"]},"metadata":{},"sourceType":"module"}