{"ast":null,"code":"import axios from 'axios';\nimport { GET_PROFILE, GET_PROFILES, GET_REPOS, PROFILE_ERROR, UPDATE_PROFILE, DELETE_ACCOUNT, CLEAR_PROFILE } from './types';\nimport { setAlert } from './alerts'; //get profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('api/profile/');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get profile by id\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get repos\n\nexport const getRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`api/profile/github/${username}`);\n    dispatch({\n      type: GET_,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //crate or update\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add experience\n\nexport const Addexperience = (formData, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Education\n\nexport const Addeducation = (formData, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are You Sure ?This can Not be undone')) {\n    try {\n      await axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: DELETE_ACCOUNT\n      });\n      dispatch(setAlert('YOur Account have been permentaly deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n\n  ;\n};","map":{"version":3,"sources":["/home/asmaa/web development/DevConnector/client/src/actions/profile.js"],"names":["axios","GET_PROFILE","GET_PROFILES","GET_REPOS","PROFILE_ERROR","UPDATE_PROFILE","DELETE_ACCOUNT","CLEAR_PROFILE","setAlert","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getRepos","username","GET_","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","Addexperience","put","Addeducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { GET_PROFILE,GET_PROFILES,GET_REPOS, PROFILE_ERROR, UPDATE_PROFILE,DELETE_ACCOUNT, CLEAR_PROFILE } from './types';\nimport { setAlert } from './alerts';\n\n\n//get profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('api/profile/me');\n\n    dispatch({ type: GET_PROFILE, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//get all profiles\n\nexport const getProfiles= () => async dispatch => {\n\n  dispatch({type:CLEAR_PROFILE})\n  try {\n    const res = await axios.get('api/profile/');\n\n    dispatch({ type: GET_PROFILES, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Get profile by id\nexport const getProfileById= userId => async dispatch => {\n\n  try {\n    const res = await axios.get(`api/profile/user/${userId}`);\n\n    dispatch({ type: GET_PROFILE, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//get repos\nexport const getRepos= username => async dispatch => {\n\n  \n  try {\n    const res = await axios.get(`api/profile/github/${username}`);\n\n    dispatch({ type: GET_, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n\n//crate or update\n\nexport const createProfile = (\n  formData,\n  history,\n  edit = false\n) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({ type: GET_PROFILE, payload: res.data });\n\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Add experience\n\nexport const Addexperience = (formData, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Add Education\n\nexport const Addeducation = (formData, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\n\n    dispatch(setAlert('Education Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//delete experience\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\n\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n\n//delete education\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\n\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\nexport const deleteAccount=()=>async dispatch=>{\n  if(window.confirm('Are You Sure ?This can Not be undone')){\n\n    try {\n      await axios.delete('/api/profile');\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({type:DELETE_ACCOUNT})\n  \n      dispatch(setAlert('YOur Account have been permentaly deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n  \n  }\n"]},"metadata":{},"sourceType":"module"}