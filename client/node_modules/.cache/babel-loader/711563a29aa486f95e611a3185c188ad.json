{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alerts';\nimport { GET_POSTS, POST_ERRORS, UPDATE_LIKES, DELETE_POST, ADD_POST, get } from './types'; //get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Likes\n\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Remove Likes\n\nexport const removeLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //delete Post\n\nexport const deletePost = postId => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: postId\n    });\n    dispatch(setAlert('Post Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add Post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/posts/', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get post\n\nexport const getPost = postId => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/asmaa/web development/DevConnector/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERRORS","UPDATE_LIKES","DELETE_POST","ADD_POST","get","getPosts","dispatch","res","type","payload","data","err","msg","response","statusText","status","addLike","postId","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","getPost"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,YAAjC,EAA+CC,WAA/C,EAA2DC,QAA3D,EAAqEC,GAArE,QAA+E,SAA/E,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACO,GAAN,CAAU,YAAV,CAAlB;AACAE,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAET,SAAR;AAAmBU,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAAhC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAVM,C,CAYP;;AACA,OAAO,MAAMC,OAAO,GAAGC,MAAM,IAAI,MAAMX,QAAN,IAAkB;AACjD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACqB,GAAN,CAAW,mBAAkBD,MAAO,EAApC,CAAlB;AACAX,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP,YAAR;AAAsBQ,MAAAA,OAAO,EAAE;AAAEQ,QAAAA,MAAF;AAAUE,QAAAA,KAAK,EAAEZ,GAAG,CAACG;AAArB;AAA/B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAVM,C,CAYP;;AACA,OAAO,MAAMK,UAAU,GAAGH,MAAM,IAAI,MAAMX,QAAN,IAAkB;AACpD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACqB,GAAN,CAAW,qBAAoBD,MAAO,EAAtC,CAAlB;AACAX,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP,YAAR;AAAsBQ,MAAAA,OAAO,EAAE;AAAEQ,QAAAA,MAAF;AAAUE,QAAAA,KAAK,EAAEZ,GAAG,CAACG;AAArB;AAA/B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAVM,C,CAYP;;AACA,OAAO,MAAMM,UAAU,GAAGJ,MAAM,IAAI,MAAMX,QAAN,IAAkB;AACpD,MAAI;AACC,UAAMT,KAAK,CAACyB,MAAN,CAAc,cAAaL,MAAO,EAAlC,CAAN;AACHX,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEN,WAAR;AAAqBO,MAAAA,OAAO,EAAEQ;AAA9B,KAAD,CAAR;AAEAX,IAAAA,QAAQ,CAACR,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAAT,CAAR;AACD,GALD,CAKE,OAAOa,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAZM,C,CAeP;;AACA,OAAO,MAAMQ,OAAO,GAAGC,QAAQ,IAAI,MAAMlB,QAAN,IAAkB;AAEnD,QAAMmB,MAAM,GAAC;AACXC,IAAAA,OAAO,EAAC;AACN,sBAAe;AADT;AADG,GAAb;;AAKA,MAAI;AACN,UAAMnB,GAAG,GAAC,MAAMV,KAAK,CAAC8B,IAAN,CAAW,aAAX,EAAyBH,QAAzB,EAAkCC,MAAlC,CAAhB;AACInB,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,QAAR;AAAkBM,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAA/B,KAAD,CAAR;AAEAJ,IAAAA,QAAQ,CAACR,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAAT,CAAR;AACD,GALD,CAKE,OAAOa,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAlBM,C,CAqBP;;AACA,OAAO,MAAMa,OAAO,GAAEX,MAAM,IAAG,MAAMX,QAAN,IAAkB;AAC/C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACO,GAAN,CAAU,YAAV,CAAlB;AACAE,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAET,SAAR;AAAmBU,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAAhC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAVM","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alerts';\nimport { GET_POSTS, POST_ERRORS, UPDATE_LIKES, DELETE_POST,ADD_POST ,get} from './types';\n\n//get posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({ type: GET_POSTS, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Add Likes\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({ type: UPDATE_LIKES, payload: { postId, likes: res.data } });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Remove Likes\nexport const removeLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({ type: UPDATE_LIKES, payload: { postId, likes: res.data } });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//delete Post\nexport const deletePost = postId => async dispatch => {\n  try {\n       await axios.delete(`/api/posts/${postId}`);\n    dispatch({ type: DELETE_POST, payload: postId });\n\n    dispatch(setAlert('Post Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n//add Post\nexport const addPost = formData => async dispatch => {\n\n  const config={\n    headers:{\n      'Content-Type':'application/json'\n    }\n  }\n  try {\nconst res=await axios.post('/api/posts/',formData,config);\n    dispatch({ type: ADD_POST, payload: res.data});\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n//get post\nexport const getPost= postId=> async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({ type: GET_POSTS, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};"]},"metadata":{},"sourceType":"module"}