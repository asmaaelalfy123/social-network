{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alerts';\nimport { GET_POSTS, POST_ERRORS, UPDATE_LIKES, DELETE_POST } from './types'; //get post\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Likes\n\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Remove Likes\n\nexport const removeLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //delete Post\n\nexport const deletePost = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: post\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/asmaa/web development/DevConnector/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERRORS","UPDATE_LIKES","DELETE_POST","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","postId","put","id","likes","removeLike","deletePost","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alerts';\nimport { GET_POSTS, POST_ERRORS, UPDATE_LIKES,DELETE_POST } from './types';\n\n//get post\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({ type: GET_POSTS, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Add Likes\nexport const addLike= postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({ type: UPDATE_LIKES, payload: { id, likes: res.data } });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n//Remove Likes\nexport const removeLike= postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({ type: UPDATE_LIKES, payload: { postId, likes: res.data } });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n//delete Post\nexport const deletePost= postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({ type: UPDATE_LIKES, payload: post });\n  } catch (err) {\n    dispatch({\n      type: POST_ERRORS,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}