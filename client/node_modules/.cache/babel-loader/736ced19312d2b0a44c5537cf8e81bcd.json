{"ast":null,"code":"var _jsxFileName = \"/home/asmaa/web development/DevConnector/client/src/components/context/auth/AuthState.js\";\nimport AuthContext from './AuthContext';\nimport axios from 'axios';\nimport React, { useReducer } from 'react';\nimport setAuthToken from '../../../utils/setAuthtoken';\nimport AuthReducer from './AuthReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: tru,\n    user: null,\n    errors: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //loaded users\n\n  const loadUser = async () => {\n    //token in global\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; //register user\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.errors[0].msg\n      });\n    }\n  }; //login user\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data.errors[0].msg\n      });\n    }\n  }; //clear errors\n\n\n  const clearErrors = () => {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  }; //logout user\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      token: state.token,\n      loading: state.loading,\n      isAuthenticated: state.isAuthenticated,\n      errors: state.errors,\n      register,\n      loadUser,\n      logout,\n      clearErrors,\n      login\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/home/asmaa/web development/DevConnector/client/src/components/context/auth/AuthState.js"],"names":["AuthContext","axios","React","useReducer","setAuthToken","AuthReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","tru","user","errors","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","error","response","msg","login","clearErrors","logout","children"],"mappings":"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","sourcesContent":["import AuthContext from './AuthContext';\nimport axios from 'axios';\nimport React, { useReducer } from 'react';\n\nimport setAuthToken from '../../../utils/setAuthtoken';\n\nimport AuthReducer from './AuthReducer';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS\n} from '../types';\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: tru,\n    user: null,\n    errors: null\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //loaded users\n  const loadUser = async () => {\n    //token in global\n\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({ type: USER_LOADED, payload: res.data });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n  //register user\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.errors[0].msg\n      });\n    }\n  };\n\n  //login user\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data.errors[0].msg\n      });\n    }\n  };\n\n  //clear errors\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  //logout user\n  const logout = () => {\n    dispatch({ type: LOGOUT });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        token: state.token,\n        loading: state.loading,\n        isAuthenticated: state.isAuthenticated,\n        errors: state.errors,\n        register,\n        loadUser,\n        logout,\n        clearErrors,\n        login\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}