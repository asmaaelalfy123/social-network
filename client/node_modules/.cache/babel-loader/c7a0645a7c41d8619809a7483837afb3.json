{"ast":null,"code":"var _jsxFileName = \"/home/asmaa/web development/DevConnector/client/src/components/routing/PrivateRoute.js\";\n// import React, { useContext } from 'react';\n// import { Route, Redirect } from 'react-router-dom';\n// import AuthContext from '../context/auth/AuthContext';\n// const PrivateRoute = ({ component: Component, ...rest }) => {\n//   const authContext = useContext(AuthContext);\n//   const { isAuthenticated, loading } = authContext;\n//   return (\n//     <Route\n//       {...rest}\n//       render={props =>\n//         !isAuthenticated && !loading ? (\n//           <Redirect to='/login' />\n//         ) : (\n//           <Component {...props} />\n//         )\n//       }\n//     />\n//   );\n// };\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AuthContext from '../context/auth/AuthContext';\nimport Spinner from '../';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...otherProps\n}) => {\n  const {\n    isAuthenticated,\n    loading\n  } = useContext(AuthContext);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, otherProps, {\n    render: props => !loading ? isAuthenticated ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: otherProps.redirectTo ? otherProps.redirectTo : '/login',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired\n};\nexport default PrivateRoute; // export default PrivateRoute;","map":{"version":3,"sources":["/home/asmaa/web development/DevConnector/client/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","PropTypes","AuthContext","Spinner","PrivateRoute","component","Component","otherProps","isAuthenticated","loading","props","redirectTo","propTypes","func","isRequired"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,OAAP,MAAoB,KAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAA6C;AAE9D,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA+BX,UAAU,CAACI,WAAD,CAA/C;AAEA,sBACI,oBAAC,KAAD,oBACQK,UADR;AAEI,IAAA,MAAM,EAAEG,KAAK,IACT,CAACD,OAAD,GAGQD,eAAe,gBAEX,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFW,gBAIX,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEH,UAAU,CAACI,UAAX,GAAwBJ,UAAU,CAACI,UAAnC,GAAgD,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPZ,gBAUI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAmBH,CAvBD;;AAyBAP,YAAY,CAACQ,SAAb,GAAyB;AACrBP,EAAAA,SAAS,EAAEJ,SAAS,CAACY,IAAV,CAAeC;AADL,CAAzB;AAIA,eAAeV,YAAf,C,CAEA","sourcesContent":["// import React, { useContext } from 'react';\n// import { Route, Redirect } from 'react-router-dom';\n// import AuthContext from '../context/auth/AuthContext';\n\n// const PrivateRoute = ({ component: Component, ...rest }) => {\n//   const authContext = useContext(AuthContext);\n//   const { isAuthenticated, loading } = authContext;\n//   return (\n//     <Route\n//       {...rest}\n//       render={props =>\n//         !isAuthenticated && !loading ? (\n//           <Redirect to='/login' />\n//         ) : (\n//           <Component {...props} />\n//         )\n//       }\n//     />\n//   );\n// };\n\nimport React, { useContext } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport AuthContext from '../context/auth/AuthContext';\nimport Spinner from '../'\n\nconst PrivateRoute = ({ component: Component, ...otherProps }) => {\n\n    const { isAuthenticated, loading } = useContext(AuthContext)\n\n    return (\n        <Route\n            {...otherProps}\n            render={props => (\n                !loading\n                    ?\n                    (\n                        isAuthenticated\n                            ?\n                            <Component {...props} />\n                            :\n                            <Redirect to={otherProps.redirectTo ? otherProps.redirectTo : '/login'} />\n                    )\n                    :\n                    <Spinner />\n            )}\n        />\n    )\n\n}\n\nPrivateRoute.propTypes = {\n    component: PropTypes.func.isRequired\n}\n\nexport default PrivateRoute\n\n// export default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}