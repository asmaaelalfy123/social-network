{"ast":null,"code":"var _jsxFileName = \"/home/asmaa/web development/DevConnector/client/src/components/routing/PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../context/auth/AuthContext';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const authContext = useContext(AuthContext);\n  const {\n    isAuthenticated,\n    loading\n  } = authContext;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n}; // import React, { useContext } from 'react'\n// import { Route, Redirect } from 'react-router-dom'\n// import PropTypes from 'prop-types'\n//import AuthContext from '../context/auth/AuthContext';\n// import Loading from '../layout/Loading'\n// const PrivateRoute = ({ component: Component, ...otherProps }) => {\n//     const { isAuthenticated, loading } = useContext(AuthContext)\n//     return (\n//         <Route\n//             {...otherProps}\n//             render={props => (\n//                 !isLoading\n//                     ?\n//                     (\n//                         isAuthenticated\n//                             ?\n//                             <Component {...props} />\n//                             :\n//                             <Redirect to={otherProps.redirectTo ? otherProps.redirectTo : '/loin'} />\n//                     )\n//                     :\n//                     <Loading />\n//             )}\n//         />\n//     )\n// }\n// PrivateRoute.propTypes = {\n//     component: PropTypes.func.isRequired\n// }\n// export default PrivateRoute\n\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/asmaa/web development/DevConnector/client/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","Component","rest","authContext","isAuthenticated","loading","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D,QAAMC,WAAW,GAAGR,UAAU,CAACG,WAAD,CAA9B;AACA,QAAM;AAAEM,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA+BF,WAArC;AACA,sBACE,oBAAC,KAAD,oBACMD,IADN;AAEE,IAAA,MAAM,EAAEI,KAAK,IACX,CAACF,eAAD,IAAoB,CAACC,OAArB,gBACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAGE,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAfD,C,CAiBA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;;;AAEA,eAAeP,YAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../context/auth/AuthContext';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, loading } = authContext;\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !isAuthenticated && !loading ? (\n          <Redirect to='/login' />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\n// import React, { useContext } from 'react'\n// import { Route, Redirect } from 'react-router-dom'\n// import PropTypes from 'prop-types'\n//import AuthContext from '../context/auth/AuthContext';\n// import Loading from '../layout/Loading'\n\n// const PrivateRoute = ({ component: Component, ...otherProps }) => {\n\n//     const { isAuthenticated, loading } = useContext(AuthContext)\n\n//     return (\n//         <Route\n//             {...otherProps}\n//             render={props => (\n//                 !isLoading\n//                     ?\n//                     (\n//                         isAuthenticated\n//                             ?\n//                             <Component {...props} />\n//                             :\n//                             <Redirect to={otherProps.redirectTo ? otherProps.redirectTo : '/loin'} />\n//                     )\n//                     :\n//                     <Loading />\n//             )}\n//         />\n//     )\n\n// }\n\n// PrivateRoute.propTypes = {\n//     component: PropTypes.func.isRequired\n// }\n\n// export default PrivateRoute\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}